/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms.Manager;

import forms.Login.frmLogin;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.logging.log4j.LogManager;

/**
 *
 * @author User
 */
public class frmManagerUpdateMenuCategories extends javax.swing.JFrame {

    /**
     * Creates new form frmCustMenuCategories
     */
    
    private String manager_id;
    private String manager_name;
    private String manager_pass;
    private String manager_role;
    
    private static final org.apache.logging.log4j.Logger logger = LogManager.getLogger(frmManagerUpdateMenuCategories.class);
    
    public frmManagerUpdateMenuCategories() {
        initComponents();
        categoryFiletoTable();
    }
    
    public frmManagerUpdateMenuCategories(String id, String name, String pass, String role) {
        initComponents();
        this.manager_id = id;
        this.manager_name = name;
        this.manager_pass = pass;
        this.manager_role = role;
        categoryFiletoTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAddMenuCategoriesBackground = new javax.swing.JPanel();
        lblAddMenuCategoriesTitle = new javax.swing.JLabel();
        btnBackAvailableMenuCategory = new javax.swing.JButton();
        pnlInnerAddMenuCategoriesBackground = new javax.swing.JPanel();
        lbldSearchAvailableMenuCategory = new javax.swing.JLabel();
        txtSearchAvailableMenuCategory = new javax.swing.JTextField();
        btnUpdateAvailableMenuCategory = new javax.swing.JButton();
        btnDeleteAvailableMenuCategory = new javax.swing.JButton();
        lblAvailableMenuCategoryTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAvailableMenuCategory = new javax.swing.JTable();
        btnClearAddNewMenuCategory = new javax.swing.JButton();
        lblAddNewMenuCategoryTitle = new javax.swing.JLabel();
        txtAddNewMenuCategory = new javax.swing.JTextField();
        btnSaveAddNewMenuCategory = new javax.swing.JButton();
        btnSearchAvailableMenuCategory = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Menu Categories");
        setBackground(new java.awt.Color(51, 51, 51));
        setMaximumSize(new java.awt.Dimension(1230, 700));
        setMinimumSize(new java.awt.Dimension(1230, 700));
        setName("frmCustMenuCategories"); // NOI18N
        setResizable(false);

        pnlAddMenuCategoriesBackground.setBackground(new java.awt.Color(51, 51, 51));
        pnlAddMenuCategoriesBackground.setMaximumSize(new java.awt.Dimension(1230, 700));
        pnlAddMenuCategoriesBackground.setMinimumSize(new java.awt.Dimension(1230, 700));
        pnlAddMenuCategoriesBackground.setName("frmCustMenuCategories"); // NOI18N
        pnlAddMenuCategoriesBackground.setPreferredSize(new java.awt.Dimension(1230, 700));
        pnlAddMenuCategoriesBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddMenuCategoriesTitle.setBackground(new java.awt.Color(71, 71, 71));
        lblAddMenuCategoriesTitle.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblAddMenuCategoriesTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblAddMenuCategoriesTitle.setText("Add Menu Categories");
        pnlAddMenuCategoriesBackground.add(lblAddMenuCategoriesTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 606, 53));

        btnBackAvailableMenuCategory.setBackground(new java.awt.Color(102, 102, 102));
        btnBackAvailableMenuCategory.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btnBackAvailableMenuCategory.setForeground(new java.awt.Color(255, 255, 255));
        btnBackAvailableMenuCategory.setText("BACK");
        btnBackAvailableMenuCategory.setToolTipText("");
        btnBackAvailableMenuCategory.setBorder(null);
        btnBackAvailableMenuCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackAvailableMenuCategory.setDefaultCapable(false);
        btnBackAvailableMenuCategory.setName(""); // NOI18N
        btnBackAvailableMenuCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackAvailableMenuCategoryActionPerformed(evt);
            }
        });
        pnlAddMenuCategoriesBackground.add(btnBackAvailableMenuCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 610, 192, 45));

        pnlInnerAddMenuCategoriesBackground.setBackground(new java.awt.Color(71, 71, 71));
        pnlInnerAddMenuCategoriesBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbldSearchAvailableMenuCategory.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbldSearchAvailableMenuCategory.setForeground(new java.awt.Color(255, 255, 255));
        lbldSearchAvailableMenuCategory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbldSearchAvailableMenuCategory.setText("Search");
        lbldSearchAvailableMenuCategory.setToolTipText("");
        pnlInnerAddMenuCategoriesBackground.add(lbldSearchAvailableMenuCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 320, 80, 30));

        txtSearchAvailableMenuCategory.setBackground(new java.awt.Color(51, 51, 51));
        txtSearchAvailableMenuCategory.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        txtSearchAvailableMenuCategory.setForeground(new java.awt.Color(255, 255, 255));
        txtSearchAvailableMenuCategory.setBorder(null);
        pnlInnerAddMenuCategoriesBackground.add(txtSearchAvailableMenuCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(672, 320, 260, 31));

        btnUpdateAvailableMenuCategory.setBackground(new java.awt.Color(102, 0, 248));
        btnUpdateAvailableMenuCategory.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btnUpdateAvailableMenuCategory.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateAvailableMenuCategory.setText("UPDATE");
        btnUpdateAvailableMenuCategory.setToolTipText("");
        btnUpdateAvailableMenuCategory.setBorder(null);
        btnUpdateAvailableMenuCategory.setBorderPainted(false);
        btnUpdateAvailableMenuCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateAvailableMenuCategory.setDefaultCapable(false);
        btnUpdateAvailableMenuCategory.setName(""); // NOI18N
        btnUpdateAvailableMenuCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAvailableMenuCategoryActionPerformed(evt);
            }
        });
        pnlInnerAddMenuCategoriesBackground.add(btnUpdateAvailableMenuCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(672, 425, 102, 37));

        btnDeleteAvailableMenuCategory.setBackground(new java.awt.Color(102, 102, 102));
        btnDeleteAvailableMenuCategory.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btnDeleteAvailableMenuCategory.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteAvailableMenuCategory.setText("DELETE");
        btnDeleteAvailableMenuCategory.setToolTipText("");
        btnDeleteAvailableMenuCategory.setBorder(null);
        btnDeleteAvailableMenuCategory.setBorderPainted(false);
        btnDeleteAvailableMenuCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteAvailableMenuCategory.setDefaultCapable(false);
        btnDeleteAvailableMenuCategory.setName(""); // NOI18N
        btnDeleteAvailableMenuCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAvailableMenuCategoryActionPerformed(evt);
            }
        });
        pnlInnerAddMenuCategoriesBackground.add(btnDeleteAvailableMenuCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 370, 102, 37));

        lblAvailableMenuCategoryTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAvailableMenuCategoryTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblAvailableMenuCategoryTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblAvailableMenuCategoryTitle.setText("Available Menu Category");
        pnlInnerAddMenuCategoriesBackground.add(lblAvailableMenuCategoryTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, 230, 40));

        tblAvailableMenuCategory.setAutoCreateRowSorter(true);
        tblAvailableMenuCategory.setBackground(new java.awt.Color(71, 71, 71));
        tblAvailableMenuCategory.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblAvailableMenuCategory.setForeground(new java.awt.Color(255, 255, 255));
        tblAvailableMenuCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAvailableMenuCategory.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblAvailableMenuCategory);
        if (tblAvailableMenuCategory.getColumnModel().getColumnCount() > 0) {
            tblAvailableMenuCategory.getColumnModel().getColumn(0).setResizable(false);
            tblAvailableMenuCategory.getColumnModel().getColumn(0).setPreferredWidth(2);
            tblAvailableMenuCategory.getColumnModel().getColumn(1).setResizable(false);
        }

        pnlInnerAddMenuCategoriesBackground.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 110, 350, 190));

        btnClearAddNewMenuCategory.setBackground(new java.awt.Color(102, 102, 102));
        btnClearAddNewMenuCategory.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btnClearAddNewMenuCategory.setForeground(new java.awt.Color(255, 255, 255));
        btnClearAddNewMenuCategory.setText("CLEAR");
        btnClearAddNewMenuCategory.setToolTipText("");
        btnClearAddNewMenuCategory.setBorder(null);
        btnClearAddNewMenuCategory.setBorderPainted(false);
        btnClearAddNewMenuCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClearAddNewMenuCategory.setDefaultCapable(false);
        btnClearAddNewMenuCategory.setName(""); // NOI18N
        btnClearAddNewMenuCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAddNewMenuCategoryActionPerformed(evt);
            }
        });
        pnlInnerAddMenuCategoriesBackground.add(btnClearAddNewMenuCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 102, 37));

        lblAddNewMenuCategoryTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAddNewMenuCategoryTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblAddNewMenuCategoryTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddNewMenuCategoryTitle.setText("Add New Menu Category");
        lblAddNewMenuCategoryTitle.setToolTipText("");
        pnlInnerAddMenuCategoriesBackground.add(lblAddNewMenuCategoryTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 220, 40));

        txtAddNewMenuCategory.setBackground(new java.awt.Color(51, 51, 51));
        txtAddNewMenuCategory.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        txtAddNewMenuCategory.setForeground(new java.awt.Color(255, 255, 255));
        txtAddNewMenuCategory.setBorder(null);
        pnlInnerAddMenuCategoriesBackground.add(txtAddNewMenuCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 242, 31));

        btnSaveAddNewMenuCategory.setBackground(new java.awt.Color(102, 0, 248));
        btnSaveAddNewMenuCategory.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btnSaveAddNewMenuCategory.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveAddNewMenuCategory.setText("SAVE");
        btnSaveAddNewMenuCategory.setToolTipText("");
        btnSaveAddNewMenuCategory.setBorder(null);
        btnSaveAddNewMenuCategory.setBorderPainted(false);
        btnSaveAddNewMenuCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSaveAddNewMenuCategory.setDefaultCapable(false);
        btnSaveAddNewMenuCategory.setName(""); // NOI18N
        btnSaveAddNewMenuCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAddNewMenuCategoryActionPerformed(evt);
            }
        });
        pnlInnerAddMenuCategoriesBackground.add(btnSaveAddNewMenuCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 102, 37));

        btnSearchAvailableMenuCategory.setBackground(new java.awt.Color(102, 0, 248));
        btnSearchAvailableMenuCategory.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btnSearchAvailableMenuCategory.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchAvailableMenuCategory.setText("SEARCH");
        btnSearchAvailableMenuCategory.setToolTipText("");
        btnSearchAvailableMenuCategory.setBorder(null);
        btnSearchAvailableMenuCategory.setBorderPainted(false);
        btnSearchAvailableMenuCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearchAvailableMenuCategory.setDefaultCapable(false);
        btnSearchAvailableMenuCategory.setName(""); // NOI18N
        btnSearchAvailableMenuCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAvailableMenuCategoryActionPerformed(evt);
            }
        });
        pnlInnerAddMenuCategoriesBackground.add(btnSearchAvailableMenuCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(672, 370, 102, 37));

        pnlAddMenuCategoriesBackground.add(pnlInnerAddMenuCategoriesBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 96, 990, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAddMenuCategoriesBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAddMenuCategoriesBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getAccessibleContext().setAccessibleName("Update Menu Categories");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveAddNewMenuCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAddNewMenuCategoryActionPerformed
        if(txtAddNewMenuCategory.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please fill in a new category");
            logger.error(manager_role + ": " + manager_name + " " + "failed to add new Category (Missing Information)");
        }else{
            addCategory();
            logger.info(manager_role + ": " + manager_name + " " + "successfully added new Menu Category");
        }    
    }//GEN-LAST:event_btnSaveAddNewMenuCategoryActionPerformed

    private void btnClearAddNewMenuCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAddNewMenuCategoryActionPerformed
        txtAddNewMenuCategory.setText(null);
        logger.info(manager_role + ": " + manager_name + " " + "Cleared Add New Menu Category Input");
    }//GEN-LAST:event_btnClearAddNewMenuCategoryActionPerformed

    private void btnUpdateAvailableMenuCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAvailableMenuCategoryActionPerformed
        categoryFiletoTable();
        logger.info(manager_role + ": " + manager_name + " " + "Updated Category Table");
    }//GEN-LAST:event_btnUpdateAvailableMenuCategoryActionPerformed

    private void btnSearchAvailableMenuCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAvailableMenuCategoryActionPerformed
        searchingCategoryTable();
        logger.info(manager_role + ": " + manager_name + " " + "Searched for a Category");
    }//GEN-LAST:event_btnSearchAvailableMenuCategoryActionPerformed

    private void btnDeleteAvailableMenuCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAvailableMenuCategoryActionPerformed
        try {
            if(tblAvailableMenuCategory.getSelectedRow() != -1){
                deletingCategoryRow();
                logger.info(manager_role + ": " + manager_name + " " + "Deleted a Category");
            }else{
                JOptionPane.showMessageDialog(this, "Please select a Category to Delete!");
                logger.error(manager_role + ": " + manager_name + " " + "has Failed to Delete a Category (Category not selected)");
            }
            
        } catch (IOException ex) {
            Logger.getLogger(frmManagerUpdateMenuCategories.class.getName()).log(Level.SEVERE, null, ex);
            logger.error(manager_role + ": " + manager_name + " " + "has Failed to Delete a Category");
        }
    }//GEN-LAST:event_btnDeleteAvailableMenuCategoryActionPerformed

    private void btnBackAvailableMenuCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackAvailableMenuCategoryActionPerformed
        this.dispose();
        frmManagerMainMenu frmMMM = new frmManagerMainMenu(manager_id, manager_name, manager_pass, manager_role);
        frmMMM.setVisible(true);
        logger.info(manager_role + ": " + manager_name + " " + "Quit Update Menu Category back to Manager Main Menu");
    }//GEN-LAST:event_btnBackAvailableMenuCategoryActionPerformed

    public void addCategory(){
        String new_category = txtAddNewMenuCategory.getText();
        Category c = new Category(new_category);
        c.saveInformation();
    }
    
    public void categoryFiletoTable(){
        Category c = new Category();
        c.importFiletoTable();
    }
    
    public void searchingCategoryTable(){
        String search_text = txtSearchAvailableMenuCategory.getText();
        
        Category c = new Category();
        c.searchInformation(search_text);
    }
    
    public void deletingCategoryRow() throws FileNotFoundException, IOException{
        DefaultTableModel model = (DefaultTableModel)tblAvailableMenuCategory.getModel();
        int selectedRowIndex = tblAvailableMenuCategory.convertRowIndexToModel(tblAvailableMenuCategory.getSelectedRow());
        
        model.removeRow(selectedRowIndex);
        
        txtSearchAvailableMenuCategory.setText(null);
        searchingCategoryTable();
        
        File file = new File("D:\\Documents\\Uni_Modules\\Object Oriented Development with Java\\Group Assignment\\Group_9_APU_Cafeteria_Food_Ordering_System\\src\\main\\java\\Database\\category.txt");
        FileWriter fw = new FileWriter(file);
        BufferedWriter bw = new BufferedWriter(fw);
        
        for(int i=0; i<tblAvailableMenuCategory.getRowCount(); i++){
            for(int j=0; j<tblAvailableMenuCategory.getColumnCount(); j++){
                if(j == (tblAvailableMenuCategory.getColumnCount()-1)){
                   bw.write(tblAvailableMenuCategory.getValueAt(i, j).toString()); 
                }else{
                   bw.write(tblAvailableMenuCategory.getValueAt(i, j).toString() + "|"); 
                }
            }
            bw.newLine();
        }
        
        bw.close();
        fw.close();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmManagerUpdateMenuCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmManagerUpdateMenuCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmManagerUpdateMenuCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmManagerUpdateMenuCategories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmManagerUpdateMenuCategories().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackAvailableMenuCategory;
    private javax.swing.JButton btnClearAddNewMenuCategory;
    private javax.swing.JButton btnDeleteAvailableMenuCategory;
    private javax.swing.JButton btnSaveAddNewMenuCategory;
    private javax.swing.JButton btnSearchAvailableMenuCategory;
    private javax.swing.JButton btnUpdateAvailableMenuCategory;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddMenuCategoriesTitle;
    private javax.swing.JLabel lblAddNewMenuCategoryTitle;
    private javax.swing.JLabel lblAvailableMenuCategoryTitle;
    private javax.swing.JLabel lbldSearchAvailableMenuCategory;
    private javax.swing.JPanel pnlAddMenuCategoriesBackground;
    private javax.swing.JPanel pnlInnerAddMenuCategoriesBackground;
    public static javax.swing.JTable tblAvailableMenuCategory;
    private javax.swing.JTextField txtAddNewMenuCategory;
    private javax.swing.JTextField txtSearchAvailableMenuCategory;
    // End of variables declaration//GEN-END:variables
}
