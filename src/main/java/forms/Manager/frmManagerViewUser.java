/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms.Manager;

import forms.Login.frmLogin;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.logging.log4j.LogManager;

/**
 *
 * @author Teoh Will Shen
 */
public class frmManagerViewUser extends javax.swing.JFrame {

    ButtonGroup bg = new ButtonGroup();
    
    /**
     * Creates new form frmMangerViewUser
     */
    
    private String manager_id;
    private String manager_name;
    private String manager_pass;
    private String manager_role;
    
    private static final org.apache.logging.log4j.Logger logger = LogManager.getLogger(frmManagerViewUser.class);
    
    public frmManagerViewUser() {
        initComponents();
        addradiobuttonGroup();
        userFiletoTable();
    }
    
    public frmManagerViewUser(String id, String name, String pass, String role) {
        initComponents();
        this.manager_id = id;
        this.manager_name = name;
        this.manager_pass = pass;
        this.manager_role = role;
        
        addradiobuttonGroup();
        userFiletoTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlViewUserBackground = new javax.swing.JPanel();
        lblViewUser = new javax.swing.JLabel();
        btnViewUserBack = new javax.swing.JButton();
        pnlInnerViewUserBackground = new javax.swing.JPanel();
        lblViewUserListTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUserList = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        lblViewUserSearchTitle = new javax.swing.JLabel();
        txtViewUserSearch = new javax.swing.JTextField();
        btnSearchUser = new javax.swing.JButton();
        btnDeleteUser = new javax.swing.JButton();
        lblViewUserViewOnly = new javax.swing.JLabel();
        lblViewUserSearchUsernameTitle = new javax.swing.JLabel();
        radViewUserViewOnlyManager = new javax.swing.JRadioButton();
        radViewUserViewOnlyCustomer = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View User");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlViewUserBackground.setBackground(new java.awt.Color(51, 51, 51));
        pnlViewUserBackground.setName("frmCustMenuCategories"); // NOI18N
        pnlViewUserBackground.setPreferredSize(new java.awt.Dimension(1230, 700));
        pnlViewUserBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblViewUser.setBackground(new java.awt.Color(71, 71, 71));
        lblViewUser.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblViewUser.setForeground(new java.awt.Color(255, 255, 255));
        lblViewUser.setText("View User");
        pnlViewUserBackground.add(lblViewUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 180, 53));

        btnViewUserBack.setBackground(new java.awt.Color(102, 102, 102));
        btnViewUserBack.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btnViewUserBack.setForeground(new java.awt.Color(255, 255, 255));
        btnViewUserBack.setText("BACK");
        btnViewUserBack.setToolTipText("");
        btnViewUserBack.setBorder(null);
        btnViewUserBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewUserBack.setDefaultCapable(false);
        btnViewUserBack.setName(""); // NOI18N
        btnViewUserBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUserBackActionPerformed(evt);
            }
        });
        pnlViewUserBackground.add(btnViewUserBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 620, 192, 45));

        pnlInnerViewUserBackground.setBackground(new java.awt.Color(71, 71, 71));
        pnlInnerViewUserBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblViewUserListTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblViewUserListTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblViewUserListTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblViewUserListTitle.setText("User List");
        pnlInnerViewUserBackground.add(lblViewUserListTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 200, 40));

        tblUserList.setAutoCreateRowSorter(true);
        tblUserList.setBackground(new java.awt.Color(71, 71, 71));
        tblUserList.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblUserList.setForeground(new java.awt.Color(255, 255, 255));
        tblUserList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Username", "User Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUserList.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblUserList);

        pnlInnerViewUserBackground.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 790, 190));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setToolTipText("");
        pnlInnerViewUserBackground.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 380, 30, 30));

        lblViewUserSearchTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblViewUserSearchTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblViewUserSearchTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewUserSearchTitle.setText("Search");
        lblViewUserSearchTitle.setToolTipText("");
        pnlInnerViewUserBackground.add(lblViewUserSearchTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 80, 30));

        txtViewUserSearch.setBackground(new java.awt.Color(51, 51, 51));
        txtViewUserSearch.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        txtViewUserSearch.setForeground(new java.awt.Color(255, 255, 255));
        txtViewUserSearch.setBorder(null);
        pnlInnerViewUserBackground.add(txtViewUserSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 260, 31));

        btnSearchUser.setBackground(new java.awt.Color(102, 0, 248));
        btnSearchUser.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btnSearchUser.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchUser.setText("SEARCH");
        btnSearchUser.setToolTipText("");
        btnSearchUser.setBorder(null);
        btnSearchUser.setBorderPainted(false);
        btnSearchUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearchUser.setDefaultCapable(false);
        btnSearchUser.setName(""); // NOI18N
        btnSearchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchUserActionPerformed(evt);
            }
        });
        pnlInnerViewUserBackground.add(btnSearchUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, 102, 37));

        btnDeleteUser.setBackground(new java.awt.Color(102, 102, 102));
        btnDeleteUser.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btnDeleteUser.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteUser.setText("DELETE");
        btnDeleteUser.setToolTipText("");
        btnDeleteUser.setBorder(null);
        btnDeleteUser.setBorderPainted(false);
        btnDeleteUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteUser.setDefaultCapable(false);
        btnDeleteUser.setName(""); // NOI18N
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });
        pnlInnerViewUserBackground.add(btnDeleteUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 380, 102, 37));

        lblViewUserViewOnly.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblViewUserViewOnly.setForeground(new java.awt.Color(255, 255, 255));
        lblViewUserViewOnly.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewUserViewOnly.setText("View Only");
        lblViewUserViewOnly.setToolTipText("");
        pnlInnerViewUserBackground.add(lblViewUserViewOnly, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 280, 90, 40));

        lblViewUserSearchUsernameTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblViewUserSearchUsernameTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblViewUserSearchUsernameTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewUserSearchUsernameTitle.setText("Search Username");
        lblViewUserSearchUsernameTitle.setToolTipText("");
        pnlInnerViewUserBackground.add(lblViewUserSearchUsernameTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 160, 40));

        radViewUserViewOnlyManager.setBackground(new java.awt.Color(51, 51, 51));
        radViewUserViewOnlyManager.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        radViewUserViewOnlyManager.setForeground(new java.awt.Color(255, 255, 255));
        radViewUserViewOnlyManager.setText("Manager");
        radViewUserViewOnlyManager.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radViewUserViewOnlyManagerItemStateChanged(evt);
            }
        });
        pnlInnerViewUserBackground.add(radViewUserViewOnlyManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 330, -1, -1));

        radViewUserViewOnlyCustomer.setBackground(new java.awt.Color(51, 51, 51));
        radViewUserViewOnlyCustomer.setFont(new java.awt.Font("Segoe UI Light", 0, 16)); // NOI18N
        radViewUserViewOnlyCustomer.setForeground(new java.awt.Color(255, 255, 255));
        radViewUserViewOnlyCustomer.setText("Customer");
        radViewUserViewOnlyCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radViewUserViewOnlyCustomerActionPerformed(evt);
            }
        });
        pnlInnerViewUserBackground.add(radViewUserViewOnlyCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 380, -1, -1));

        pnlViewUserBackground.add(pnlInnerViewUserBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 96, 990, 490));

        getContentPane().add(pnlViewUserBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        pnlViewUserBackground.getAccessibleContext().setAccessibleName("View User");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchUserActionPerformed
        searchingUserTable();
        logger.info(manager_role + ": " + manager_name + " " + "searched for a user");
    }//GEN-LAST:event_btnSearchUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        try {
            if(tblUserList.getSelectedRow() != -1){
                deletingUserRow();
                logger.info(manager_role + ": " + manager_name + " " + "Deleted a User");
            }else{
                JOptionPane.showMessageDialog(this, "Please select a User to Delete!");
                logger.error(manager_role + ": " + manager_name + " " + "has Failed to Delete a User (User not selected)");
            }
        } catch (IOException ex) {
            Logger.getLogger(frmManagerViewUser.class.getName()).log(Level.SEVERE, null, ex);
            logger.error(manager_role + ": " + manager_name + " " + "has Failed to Delete a User");
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void radViewUserViewOnlyManagerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radViewUserViewOnlyManagerItemStateChanged
        String q = getSelected();
        filter(q);
        logger.info(manager_role + ": " + manager_name + " " + "View Manager Only");
    }//GEN-LAST:event_radViewUserViewOnlyManagerItemStateChanged

    private void radViewUserViewOnlyCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radViewUserViewOnlyCustomerActionPerformed
        String q = getSelected();
        filter(q);
        logger.info(manager_role + ": " + manager_name + " " + "View Customer Only");
    }//GEN-LAST:event_radViewUserViewOnlyCustomerActionPerformed

    private void btnViewUserBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUserBackActionPerformed
        this.dispose();
        frmManagerMainMenu frmMMM = new frmManagerMainMenu(manager_id, manager_name, manager_pass, manager_role);
        frmMMM.setVisible(true);
        logger.info(manager_role + ": " + manager_name + " " + "Quit View User back to Manager Main Menu");
    }//GEN-LAST:event_btnViewUserBackActionPerformed
    
    private void filter(String q){
        DefaultTableModel model = (DefaultTableModel)tblUserList.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        
        tblUserList.setRowSorter(tr);
        
        if(q != "None"){
            tr.setRowFilter(RowFilter.regexFilter(q));
        }else{
            tblUserList.setRowSorter(tr);
        }
    }
    
    private void addradiobuttonGroup(){
        bg.add(radViewUserViewOnlyCustomer);
        bg.add(radViewUserViewOnlyManager);
    }
    
    private String getSelected(){
        if(radViewUserViewOnlyCustomer.isSelected()){
            return "Customer";
        }else if(radViewUserViewOnlyManager.isSelected()){
            return "Manager";
        }else{
            return "None";
        }
    }
    
    public void userFiletoTable(){
        User_View uv = new User_View();
        uv.importFiletoTable();
    }
    
    public void searchingUserTable(){
        String searchText = txtViewUserSearch.getText();
        
        User_View uv = new User_View();
        uv.searchInformation(searchText);
    }
    
    public void deletingUserRow() throws FileNotFoundException, IOException{
        DefaultTableModel model = (DefaultTableModel)tblUserList.getModel();
        int selectedRowIndex = tblUserList.convertRowIndexToModel(tblUserList.getSelectedRow());
        
        int user_id = Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString());
        String user_name = model.getValueAt(selectedRowIndex, 1).toString();
        String user_role = model.getValueAt(selectedRowIndex, 2).toString();
        
        File inputFile = new File("D:\\Documents\\Uni_Modules\\Object Oriented Development with Java\\Group Assignment\\Group_9_APU_Cafeteria_Food_Ordering_System\\src\\main\\java\\Database\\user.txt");
        File tempFile = new File("D:\\Documents\\Uni_Modules\\Object Oriented Development with Java\\Group Assignment\\Group_9_APU_Cafeteria_Food_Ordering_System\\src\\main\\java\\Database\\myTempFile.txt");

        BufferedReader reader = new BufferedReader(new FileReader(inputFile));
        BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));

        String lineToRemove1 = user_id + "|" + user_name;
        String lineToRemove2 = user_role;
        String currentLine;

        while((currentLine = reader.readLine()) != null) {
            // trim newline when comparing with lineToRemove
            String trimmedLine = currentLine.trim();
            if(trimmedLine.contains(lineToRemove1) && trimmedLine.contains(lineToRemove2)) continue;
            writer.write(currentLine + System.getProperty("line.separator"));
        }
        writer.close(); 
        reader.close();
        
        //copy from tempFile and paste to inputFile
        FileInputStream in = new FileInputStream(tempFile);
        FileOutputStream out = new FileOutputStream(inputFile);
  
        try {
  
            int n;
  
            // read() function to read the
            // byte of data
            while ((n = in.read()) != -1) {
                // write() function to write
                // the byte of data
                out.write(n);
            }
        }
        finally {
            if (in != null) {
  
                // close() function to close the
                // stream
                in.close();
            }
            // close() function to close
            // the stream
            if (out != null) {
                out.close();
            }
        }

        tempFile.delete();  //deleting tempFile
        userFiletoTable();
        txtViewUserSearch.setText(null);
        searchingUserTable();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmManagerViewUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmManagerViewUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmManagerViewUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmManagerViewUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmManagerViewUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnSearchUser;
    private javax.swing.JButton btnViewUserBack;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblViewUser;
    private javax.swing.JLabel lblViewUserListTitle;
    private javax.swing.JLabel lblViewUserSearchTitle;
    private javax.swing.JLabel lblViewUserSearchUsernameTitle;
    private javax.swing.JLabel lblViewUserViewOnly;
    private javax.swing.JPanel pnlInnerViewUserBackground;
    private javax.swing.JPanel pnlViewUserBackground;
    private javax.swing.JRadioButton radViewUserViewOnlyCustomer;
    private javax.swing.JRadioButton radViewUserViewOnlyManager;
    public static javax.swing.JTable tblUserList;
    private javax.swing.JTextField txtViewUserSearch;
    // End of variables declaration//GEN-END:variables
}
