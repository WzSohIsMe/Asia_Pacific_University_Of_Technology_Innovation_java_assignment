/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms.Customer;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import org.apache.logging.log4j.LogManager;
/**
 *
 * @author User
 */
public class frmCustOrderingMenu extends javax.swing.JFrame {
    private static String Username;
    private static String Password;
    private static String UserID;
    private static String UserRole;
    private static String Category;
    private static String SelectedFood;
    private static double TotalAmount;
    private static double firstclickTotalAmount;
    
    private static final DecimalFormat df = new DecimalFormat("0.00");
    
    private static final org.apache.logging.log4j.Logger logger = LogManager.getLogger(frmCustOrderingMenu.class);
    
    /**
     * Creates new form frmCustMenuCategories
     */
    public frmCustOrderingMenu() {
        initComponents();
    }
    
    public frmCustOrderingMenu(String ID, String u, String p, String r){
        Username = u;
        Password = p;
        UserID = ID;
        UserRole = r;
        initComponents();
    }
    
    public frmCustOrderingMenu(String ID, String u, String p){
        Username = u;
        Password = p;
        UserID = ID;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        lblFoodMenu = new javax.swing.JLabel();
        lblCart = new javax.swing.JLabel();
        lblCustomerFullName = new javax.swing.JLabel();
        btnRemoveFromCart = new javax.swing.JButton();
        btnAddToCart = new javax.swing.JButton();
        btnCheckOut = new javax.swing.JButton();
        pnlFoodMenu = new javax.swing.JScrollPane();
        lstFoodMenu = new javax.swing.JList<>();
        pnlDescription = new javax.swing.JPanel();
        txtPrice = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaDescription = new javax.swing.JTextArea();
        lblFoodMenu1 = new javax.swing.JLabel();
        spnQuantity = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        lblTotal = new javax.swing.JLabel();
        lblCalculatedTotal = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu - Categories");
        setBackground(new java.awt.Color(51, 51, 51));
        setName("frmCustMenuCategories"); // NOI18N
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlBackground.setBackground(new java.awt.Color(51, 51, 51));
        pnlBackground.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlBackground.setName("frmCustMenuCategories"); // NOI18N
        pnlBackground.setPreferredSize(new java.awt.Dimension(1230, 700));
        pnlBackground.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlBackgroundMouseMoved(evt);
            }
        });
        pnlBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblFoodMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFoodMenu.setForeground(new java.awt.Color(255, 255, 255));
        lblFoodMenu.setText("Food Menu");
        pnlBackground.add(lblFoodMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 179, 16));

        lblCart.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCart.setForeground(new java.awt.Color(255, 255, 255));
        lblCart.setText("Cart");
        pnlBackground.add(lblCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 179, 16));

        lblCustomerFullName.setBackground(new java.awt.Color(71, 71, 71));
        lblCustomerFullName.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblCustomerFullName.setForeground(new java.awt.Color(255, 255, 255));
        lblCustomerFullName.setText("ORDERING SYSTEM");
        pnlBackground.add(lblCustomerFullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 606, 53));

        btnRemoveFromCart.setBackground(new java.awt.Color(102, 102, 102));
        btnRemoveFromCart.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnRemoveFromCart.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveFromCart.setText("REMOVE");
        btnRemoveFromCart.setToolTipText("");
        btnRemoveFromCart.setBorder(null);
        btnRemoveFromCart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoveFromCart.setDefaultCapable(false);
        btnRemoveFromCart.setName(""); // NOI18N
        btnRemoveFromCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFromCartActionPerformed(evt);
            }
        });
        pnlBackground.add(btnRemoveFromCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 600, 197, 45));

        btnAddToCart.setBackground(new java.awt.Color(102, 102, 102));
        btnAddToCart.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnAddToCart.setForeground(new java.awt.Color(255, 255, 255));
        btnAddToCart.setText("ADD TO CART");
        btnAddToCart.setToolTipText("");
        btnAddToCart.setBorder(null);
        btnAddToCart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddToCart.setDefaultCapable(false);
        btnAddToCart.setName(""); // NOI18N
        btnAddToCart.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnAddToCartFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnAddToCartFocusLost(evt);
            }
        });
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });
        pnlBackground.add(btnAddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 600, 192, 45));

        btnCheckOut.setBackground(new java.awt.Color(102, 102, 102));
        btnCheckOut.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btnCheckOut.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckOut.setText("CHECK OUT");
        btnCheckOut.setToolTipText("");
        btnCheckOut.setBorder(null);
        btnCheckOut.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCheckOut.setDefaultCapable(false);
        btnCheckOut.setFocusPainted(false);
        btnCheckOut.setName(""); // NOI18N
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });
        pnlBackground.add(btnCheckOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 600, 203, 46));

        lstFoodMenu.setBackground(new java.awt.Color(102, 102, 102));
        lstFoodMenu.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        lstFoodMenu.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        lstFoodMenu.setForeground(new java.awt.Color(255, 255, 255));
        lstFoodMenu.setPreferredSize(new java.awt.Dimension(45, 500));
        lstFoodMenu.setSelectionBackground(new java.awt.Color(51, 51, 51));
        lstFoodMenu.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                lstFoodMenuComponentShown(evt);
            }
        });
        lstFoodMenu.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstFoodMenuValueChanged(evt);
            }
        });
        pnlFoodMenu.setViewportView(lstFoodMenu);

        pnlBackground.add(pnlFoodMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 192, 446));

        pnlDescription.setBackground(new java.awt.Color(102, 102, 102));
        pnlDescription.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        pnlDescription.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPrice.setBackground(new java.awt.Color(51, 51, 51));
        txtPrice.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        txtPrice.setForeground(new java.awt.Color(255, 255, 255));
        txtPrice.setBorder(null);
        txtPrice.setCaretColor(new java.awt.Color(255, 255, 255));
        txtPrice.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtPrice.setEnabled(false);
        txtPrice.setFocusable(false);
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        pnlDescription.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 130, 44));

        txaDescription.setBackground(new java.awt.Color(102, 102, 102));
        txaDescription.setColumns(20);
        txaDescription.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        txaDescription.setForeground(new java.awt.Color(255, 255, 255));
        txaDescription.setLineWrap(true);
        txaDescription.setRows(5);
        txaDescription.setBorder(null);
        txaDescription.setCaretColor(new java.awt.Color(255, 255, 255));
        txaDescription.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txaDescription.setEnabled(false);
        jScrollPane2.setViewportView(txaDescription);

        pnlDescription.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 210));

        pnlBackground.add(pnlDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 130, -1));

        lblFoodMenu1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFoodMenu1.setForeground(new java.awt.Color(255, 255, 255));
        lblFoodMenu1.setText("Description");
        pnlBackground.add(lblFoodMenu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 179, 16));

        spnQuantity.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        spnQuantity.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));
        pnlBackground.add(spnQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 490, 150, 69));

        jScrollPane1.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));

        tblCart.setAutoCreateRowSorter(true);
        tblCart.setBackground(new java.awt.Color(102, 102, 102));
        tblCart.setForeground(new java.awt.Color(255, 255, 255));
        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Food ID", "Food Category", "Food Name", "Quantity", "Price", "Total Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCart.setCellSelectionEnabled(true);
        tblCart.setGridColor(new java.awt.Color(102, 102, 102));
        tblCart.setSelectionBackground(new java.awt.Color(51, 51, 51));
        tblCart.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCart.setShowGrid(true);
        tblCart.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tblCartComponentAdded(evt);
            }
        });
        tblCart.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblCartAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tblCart.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblCartPropertyChange(evt);
            }
        });
        tblCart.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblCartKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblCartKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblCartKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblCart);

        pnlBackground.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, 740, 450));

        lblTotal.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(255, 255, 255));
        lblTotal.setText("TOTAL");
        pnlBackground.add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 600, -1, -1));

        lblCalculatedTotal.setFont(new java.awt.Font("Segoe UI", 0, 45)); // NOI18N
        lblCalculatedTotal.setForeground(new java.awt.Color(51, 153, 0));
        lblCalculatedTotal.setText("RM 0.00");
        pnlBackground.add(lblCalculatedTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 580, -1, -1));

        btnBack.setBackground(new java.awt.Color(102, 102, 102));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<");
        btnBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        pnlBackground.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 50, 50));

        getContentPane().add(pnlBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        // TODO add your handling code here:
        
        String filePath = "D:\\Documents\\Uni_Modules\\Object Oriented Development with Java\\Group Assignment\\Group_9_APU_Cafeteria_Food_Ordering_System\\src\\main\\java\\Database\\cart.txt";
        
        if(tblCart.getRowCount()>0){
            try{
                File file = new File(filePath);
                FileWriter fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);

                for(int i =0; i < tblCart.getRowCount();i++){
                    for(int j = 0; j<tblCart.getColumnCount();j++){

                        if(tblCart.getColumnCount()-1==j){
                            bw.write(tblCart.getValueAt(i, j).toString());
                            System.out.println("last column number is "+tblCart.getColumnCount());
                        }else{
                            bw.write(tblCart.getValueAt(i, j).toString()+"|");
                        }

                    }
                    bw.newLine();
                }

                bw.close();
                fw.close();

            } catch (IOException ex) {
                Logger.getLogger(frmCustOrderingMenu.class.getName()).log(Level.SEVERE, null, ex);
            }

                this.toBack();
                this.setVisible(false);
                frmCustCart cart = new frmCustCart(UserID,Username,Password,UserRole);
                cart.setVisible(true);
                this.dispose();
                
                logger.info(UserRole + ": " + Username + " " + "Checked Out Successfully");
                
        }else if(tblCart.getRowCount()<=0 && lstFoodMenu.getSelectedIndex()!=-1){
            JOptionPane.showMessageDialog(null,"Please Add Selected Item To Cart Befoer Checking Out!","Check Out Error",JOptionPane.ERROR_MESSAGE);
            logger.error(UserRole + ": " + Username + " " + "failed to Check Out (No Selected Item Added)");
        }else{
            JOptionPane.showMessageDialog(null,"Please Order Food Before Checking Out!","Check Out Error",JOptionPane.ERROR_MESSAGE);
            logger.error(UserRole + ": " + Username + " " + "failed to Check Out (No Food is in the Cart)");
        }
        
    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.toBack();
        this.setVisible(false);
        frmCustMainMenu mainmenu = new frmCustMainMenu(UserID,Username,Password);
        mainmenu.setVisible(true);
        this.dispose();
        logger.info(UserRole + ": " + Username + " " + "Quit Menu back to Customer Main Menu");
    }//GEN-LAST:event_btnBackActionPerformed

    private void lstFoodMenuComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_lstFoodMenuComponentShown
        
    }//GEN-LAST:event_lstFoodMenuComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        FoodMenu foodmenu = new FoodMenu();
        foodmenu.getFoodMenu("FoodMenu");

    }//GEN-LAST:event_formComponentShown

    private void lstFoodMenuValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstFoodMenuValueChanged
        // TODO add your handling code here:
        System.out.println("Selected food has been changed to "+lstFoodMenu.getSelectedValue()+"\n");
        
        String selectedFood;
        
        selectedFood = lstFoodMenu.getSelectedValue();
        
        File file = new File("D:\\Documents\\Uni_Modules\\Object Oriented Development with Java\\Group Assignment\\Group_9_APU_Cafeteria_Food_Ordering_System\\src\\main\\java\\Database\\food.txt");
        
        try{
            Scanner scan = new Scanner(file);
            scan.useDelimiter("[|\n]");
            
            while(scan.hasNext()){
                int foodidx = Integer.parseInt(scan.next());
                String foodcatx = scan.next();
                String foodnamex = scan.next();
                double foodpricex = Double.parseDouble(scan.next());
                String fooddescx = scan.next().trim();
                
                Category = foodcatx;


                if(selectedFood.equals(foodnamex)){
                    txaDescription.setText(fooddescx);
                    logger.info(UserRole + ": " + Username + " " + "selected a Food in the Menu");
                    break;
                }else if(scan.hasNext()){
                    
                }else{
                    System.out.println("***Food Not Found.***");
                    logger.error(UserRole + ": " + Username + " " + "failed to selected a Food in the Menu (Food Not Found)");
                }
            }       
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmCustOrderingMenu.class.getName()).log(Level.SEVERE, null, ex);
            logger.error(UserRole + ": " + Username + " " + "failed to selected a Food in the Menu (Food Not Found)");
        } 
    }//GEN-LAST:event_lstFoodMenuValueChanged

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        if(lstFoodMenu.getSelectedIndex()!=-1){
            String selectedFood = lstFoodMenu.getSelectedValue();
            int quantity = (int) spnQuantity.getValue();

            File file = new File("D:\\Documents\\Uni_Modules\\Object Oriented Development with Java\\Group Assignment\\Group_9_APU_Cafeteria_Food_Ordering_System\\src\\main\\java\\Database\\food.txt");

            try{
                int foodidx = 0;
                double foodpricex = 0;        
                double total = 0;
                String foodnamex = "";
                String foodcatx = "";

                Scanner scan = new Scanner(file);
                scan.useDelimiter("[|\n]");

                while(scan.hasNext()){
                    foodidx = Integer.parseInt(scan.next());
                    foodcatx = scan.next();
                    foodnamex = scan.next();
                    foodpricex = Double.parseDouble(scan.next());
                    String fooddescx = scan.next().trim();    
                    if(selectedFood.equals(foodnamex)){
                        
                        total = foodpricex*quantity;
                        firstclickTotalAmount = total;
                        break;

                    }else if(scan.hasNext()){
                        
                    }else{
                        System.out.println("***Food Not Found.***");
                        logger.error(UserRole + ": " + Username + " " + "failed to Add a Food to Cart (Food Not Found)");
                    }

                }

                System.out.println("Done");
                DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
                model.addRow(new Object[] {foodidx,foodcatx,foodnamex,
                    quantity,foodpricex,total});
                
                logger.info(UserRole + ": " + Username + " " + "Added a Food to Cart");

            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmCustOrderingMenu.class.getName()).log(Level.SEVERE, null, ex);
                logger.error(UserRole + ": " + Username + " " + "failed to Add a Food to Cart");
            }
        }else{
            JOptionPane.showMessageDialog(null,"Please Select An Item To Add To Cart!","Ordering Error",JOptionPane.ERROR_MESSAGE);
            logger.error(UserRole + ": " + Username + " " + "failed to Add a Food to Cart (No Selected Food)");
        }
        
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void tblCartKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCartKeyPressed

    }//GEN-LAST:event_tblCartKeyPressed

    private void tblCartKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCartKeyReleased
        // TODO add your handling code here:
        double sum = 0;
        System.out.println("working!!!!");
        for(int i =0; i<tblCart.getRowCount();i++){
            int Quantity = Integer.parseInt(tblCart.getValueAt(i, 3).toString());
            if(Quantity>0){
                double price = Double.parseDouble(tblCart.getValueAt(i, 4).toString());
                double calculated_price = Quantity*price;
                    
                System.out.println(i+1+" row: ");
                System.out.println("Quantity: "+Quantity);
                System.out.println("Total Amount: "+calculated_price);
            
                tblCart.setValueAt(calculated_price,i,5);
                
            }else{
                JOptionPane.showMessageDialog(null, "Quantity Cant be Less than 1!","Input Error",JOptionPane.ERROR_MESSAGE);
                logger.error(UserRole + ": " + Username + " " + "failed to Add a Food to Cart (Queantity Less than 1)");
                tblCart.setValueAt(1, i, 3);
                
                double price = Double.parseDouble(tblCart.getValueAt(i, 4).toString());
                double calculated_price = Quantity*price;
                    
                System.out.println(i+1+" row: ");
                System.out.println("Quantity: "+Quantity);
                System.out.println("Total Amount: "+calculated_price);
            
                tblCart.setValueAt(calculated_price,i,5);
            }
            
            sum = sum + Double.parseDouble(tblCart.getValueAt(i, 5).toString());
            
            TotalAmount = sum;
            
        }
        df.setRoundingMode(RoundingMode.UP);
        String str_totalamount = df.format(TotalAmount);
        lblCalculatedTotal.setText("RM "+str_totalamount);
        
    }//GEN-LAST:event_tblCartKeyReleased

    private void tblCartKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCartKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_tblCartKeyTyped

    private void tblCartPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblCartPropertyChange
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_tblCartPropertyChange

    private void pnlBackgroundMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlBackgroundMouseMoved
        // TODO add your handling code here:
        
    }//GEN-LAST:event_pnlBackgroundMouseMoved

    private void tblCartComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tblCartComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCartComponentAdded

    private void tblCartAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblCartAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCartAncestorAdded

    private void btnAddToCartFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnAddToCartFocusLost
        // TODO add your handling code here:
        double sum = 0;
        for(int i =0; i<tblCart.getRowCount();i++){
            sum = sum + Double.parseDouble(tblCart.getValueAt(i, 5).toString());
            firstclickTotalAmount = sum;
        }
        
        df.setRoundingMode(RoundingMode.UP);
        String str_firstclicktotalamount = df.format(firstclickTotalAmount);
        
        lblCalculatedTotal.setText("RM "+str_firstclicktotalamount);
    }//GEN-LAST:event_btnAddToCartFocusLost

    private void btnRemoveFromCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFromCartActionPerformed
        // TODO add your handling code here:
        
        if(tblCart.getSelectedRow()!=-1){
            System.out.println(tblCart.getSelectedRow());
            DefaultTableModel model = (DefaultTableModel) tblCart.getModel();
            if(tblCart.getSelectedRow()!=-1){
                model.removeRow(tblCart.getSelectedRow());
                JOptionPane.showMessageDialog(null, "Selected Item Deleted Successfully.");
                logger.info(UserRole + ": " + Username + " " + "Removed an Item from Cart");
            }

            double sum = 0;
            for(int i =0; i<tblCart.getRowCount();i++){
                sum = sum + Double.parseDouble(tblCart.getValueAt(i, 5).toString());
                firstclickTotalAmount = sum;
            }

            df.setRoundingMode(RoundingMode.UP);
            String str_firtclicktltalamoount = df.format(firstclickTotalAmount);
            lblCalculatedTotal.setText("RM "+str_firtclicktltalamoount);
        }else{
            JOptionPane.showMessageDialog(null,"Please Select A Food To Remove!","Remove Error",JOptionPane.ERROR_MESSAGE);
            logger.error(UserRole + ": " + Username + " " + "failed to Remove an Item from Cart (No Item Selected)");
        }
        
        
        
    }//GEN-LAST:event_btnRemoveFromCartActionPerformed

    private void btnAddToCartFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnAddToCartFocusGained
        // TODO add your handling code here:
        double sum = 0;
        for(int i =0; i<tblCart.getRowCount();i++){
            sum = sum + Double.parseDouble(tblCart.getValueAt(i, 5).toString());
            firstclickTotalAmount = sum;
        }
        
        df.setRoundingMode(RoundingMode.UP);
        String str_firstclicktotalamount = df.format(firstclickTotalAmount);
        
        lblCalculatedTotal.setText("RM "+str_firstclicktotalamount);
    }//GEN-LAST:event_btnAddToCartFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCustOrderingMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCustOrderingMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCustOrderingMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCustOrderingMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCustOrderingMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnRemoveFromCart;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCalculatedTotal;
    private javax.swing.JLabel lblCart;
    private javax.swing.JLabel lblCustomerFullName;
    private javax.swing.JLabel lblFoodMenu;
    private javax.swing.JLabel lblFoodMenu1;
    private javax.swing.JLabel lblTotal;
    public static javax.swing.JList<String> lstFoodMenu;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlDescription;
    private javax.swing.JScrollPane pnlFoodMenu;
    private javax.swing.JSpinner spnQuantity;
    public static javax.swing.JTable tblCart;
    private javax.swing.JTextArea txaDescription;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
